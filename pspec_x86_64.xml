<PISI>
    <Source>
        <Name>check</Name>
        <Homepage>http://check.sourceforge.net/</Homepage>
        <Packager>
            <Name>Ikey Doherty</Name>
            <Email>ikey@solus-project.com</Email>
        </Packager>
        <License>LGPL-2.0</License>
        <Summary xml:lang="en">C unit testing framework</Summary>
        <Description xml:lang="en">Check is a unit testing framework for C. It features a simple interface for defining unit tests, putting little in the way of the developer. Tests are run in a separate address space, so both assertion failures and code errors that cause segmentation faults or other signals can be caught. Test results are reportable in the following: Subunit, TAP, XML, and a generic logging format.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://solus-project.com/sources/README.Solus</Archive>
    </Source>
    <Package>
        <Name>check-devel</Name>
        <Summary xml:lang="en">Development files for check</Summary>
        <Description xml:lang="en">Check is a unit testing framework for C. It features a simple interface for defining unit tests, putting little in the way of the developer. Tests are run in a separate address space, so both assertion failures and code errors that cause segmentation faults or other signals can be caught. Test results are reportable in the following: Subunit, TAP, XML, and a generic logging format.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="current">check</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="header">/usr/include</Path>
            <Path fileType="library">/usr/lib64/lib*.so</Path>
            <Path fileType="data">/usr/lib64/pkgconfig</Path>
        </Files>
    </Package>
    <Package>
        <Name>check</Name>
        <Summary xml:lang="en">C unit testing framework</Summary>
        <Description xml:lang="en">Check is a unit testing framework for C. It features a simple interface for defining unit tests, putting little in the way of the developer. Tests are run in a separate address space, so both assertion failures and code errors that cause segmentation faults or other signals can be caught. Test results are reportable in the following: Subunit, TAP, XML, and a generic logging format.
</Description>
        <PartOf>library</PartOf>
        <Files>
            <Path fileType="executable">/usr/bin</Path>
            <Path fileType="library">/usr/lib64/lib*.so.*</Path>
            <Path fileType="doc">/usr/share/doc</Path>
            <Path fileType="man">/usr/share/man</Path>
            <Path fileType="data">/usr/share/aclocal</Path>
        </Files>
    </Package>
    <History>
        <Update release="4">
            <Date>2016-03-05</Date>
            <Version>0.9.14</Version>
            <Comment>Packaging update</Comment>
            <Name>Ikey Doherty</Name>
            <Email>ikey@solus-project.com</Email>
        </Update>
    </History>
</PISI>